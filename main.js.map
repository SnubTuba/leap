{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/combat-page/combat-log.service.ts","./src/app/combat-page/combat-page.component.ts","./src/app/combat-page/combat-page.component.html","./src/app/combat-page/encounter-table.service.ts","./src/app/combat-page/monsters.ts","./src/app/combat-page/player.service.ts","./src/app/gale-page/gale-page.component.ts","./src/app/gale-page/gale-page.component.html","./src/app/heal-page/heal-page.component.ts","./src/app/heal-page/heal-page.component.html","./src/app/home-page/home-page.component.ts","./src/app/home-page/home-page.component.html","./src/app/learn-fireball/learn-fireball.component.ts","./src/app/learn-fireball/learn-fireball.component.html","./src/app/minimize-page/minimize-page.component.ts","./src/app/minimize-page/minimize-page.component.html","./src/app/spell-button/spell-button.component.ts","./src/app/spell-button/spell-button.component.html","./src/app/spells.ts","./src/app/unlock-page/unlock-page.component.ts","./src/app/unlock-page/unlock-page.component.html","./src/app/unlocks.service.ts","./src/app/utils/get-random-number-arbitrary.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { LearnFireballComponent } from './learn-fireball/learn-fireball.component';\nimport { HealComponent } from './heal-page/heal-page.component';\nimport { UnlockPageComponent } from './unlock-page/unlock-page.component';\nimport { GalePageComponent } from './gale-page/gale-page.component';\nimport { MinimizePageComponent } from './minimize-page/minimize-page.component';\nimport { CombatPageComponent } from './combat-page/combat-page.component';\n\nexport enum Pages {\n  Heal = 'heal-page',\n  Unlock = 'unlock-page',\n  LearnFireball = 'learn-fireball',\n  Gale = 'gale-page',\n  Home = '',\n  Minimize = 'minimize-page',\n  Combat = 'combat-page',\n}\n\nconst routes: Routes = [\n  { path: Pages.Unlock, component: UnlockPageComponent },\n  { path: Pages.LearnFireball, component: LearnFireballComponent },\n  { path: Pages.Heal, component: HealComponent },\n  { path: Pages.Gale, component: GalePageComponent },\n  { path: Pages.Minimize, component: MinimizePageComponent },\n  { path: Pages.Combat, component: CombatPageComponent },\n  { path: Pages.Home, component: HomePageComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'leap';\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { HealComponent } from './heal-page/heal-page.component';\nimport { LearnFireballComponent } from './learn-fireball/learn-fireball.component';\nimport { UnlockPageComponent } from './unlock-page/unlock-page.component';\nimport { SpellButtonComponent } from './spell-button/spell-button.component';\nimport { GalePageComponent } from './gale-page/gale-page.component';\nimport { MinimizePageComponent } from './minimize-page/minimize-page.component';\nimport { CombatPageComponent } from './combat-page/combat-page.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePageComponent,\n    HealComponent,\n    LearnFireballComponent,\n    UnlockPageComponent,\n    SpellButtonComponent,\n    GalePageComponent,\n    MinimizePageComponent,\n    CombatPageComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CombatLogService {\n  combatLog: string[] = [];\n\n  addLine(line: string) {\n    this.combatLog.unshift(line);\n  }\n\n  clear() {\n    this.combatLog = [];\n  }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PlayerService } from './player.service';\nimport { Monster } from './monsters';\nimport { EncounterTableService } from './encounter-table.service';\nimport { Pages } from '../app-routing.module';\nimport { UnlocksService } from '../unlocks.service';\nimport { Unlockables } from '../spells';\nimport { CombatLogService } from './combat-log.service';\n\n@Component({\n  selector: 'app-combat-page',\n  templateUrl: './combat-page.component.html',\n  styleUrls: ['./combat-page.component.scss'],\n})\nexport class CombatPageComponent {\n  constructor(\n    private router: Router,\n    public player: PlayerService,\n    private activatedRoute: ActivatedRoute,\n    private encounterTableService: EncounterTableService,\n    public unlocksService: UnlocksService,\n    public combatLogService: CombatLogService\n  ) {\n    this.combatLogService.clear();\n    this.player.reset();\n    this.activatedRoute.queryParams.subscribe((queryParams) => {\n      const encounterNumber = queryParams['encounter'];\n      if (encounterNumber === undefined) {\n        this.gameState = 'error';\n        throw new Error('No Envounter Error');\n      }\n      this.monsters = this.encounterTableService.getEncounter(+encounterNumber);\n      this.gameState = 'fighting';\n    });\n  }\n\n  gameState: GameState = 'loading';\n  selectedActon: 'attack' | 'spell' = 'attack';\n  selectedSpell?: Unlockables.Spell =\n    this.unlocksService.getUnlockedSpells()[0];\n  monsters: Monster[] = [];\n\n  attackAction(monsterIndex: number) {\n    const monster = this.monsters[monsterIndex];\n\n    if (this.selectedActon === 'attack') {\n      const dmgDealt = monster.takeDamage(this.player.damage);\n      this.combatLogService.addLine(\n        `You deal ${dmgDealt} damage to ${monster.name}`\n      );\n    }\n    if (this.selectedActon === 'spell' && this.selectedSpell) {\n      const log = this.castSpell(monster, this.selectedSpell);\n      this.combatLogService.addLine(log);\n    }\n\n    this.postActionPhase();\n  }\n\n  private postActionPhase() {\n    this.monsters.forEach((monster) => {\n      if (!monster.isDefeated()) {\n        const log = monster.takeAction();\n        this.combatLogService.addLine(log);\n      }\n    });\n\n    if (this.player.hp <= 0) {\n      this.gameState = 'lost';\n    }\n\n    const allMonstersDefeated = this.monsters.reduce(\n      (isDefeated, monster) => isDefeated && monster.isDefeated(),\n      true\n    );\n\n    if (allMonstersDefeated) {\n      this.player.levelUp();\n      this.combatLogService.addLine(\n        'You win and level up gaining 3 hp and 3 damage'\n      );\n      this.gameState = 'win';\n      this.monsters.forEach((monster) => monster.reward());\n    }\n  }\n\n  castSpell(monster: Monster, spell: Unlockables.Spell) {\n    if (this.player.mp < spell.mpCost) {\n      return `You try to cast ${spell.name}, but you dont have enough mp`;\n    }\n    this.player.mp -= spell.mpCost;\n\n    return spell.action(monster, this.monsters);\n  }\n\n  attackBtn() {\n    this.selectedActon = 'attack';\n  }\n\n  spellBtn() {\n    this.gameState = 'selectingSpell';\n  }\n\n  confirmRun() {\n    const result = confirm('Do you wish to run?');\n    if (result == true) {\n      this.router.navigateByUrl(Pages.Home);\n    }\n  }\n\n  selectSpell(spell: Unlockables.Spell) {\n    if (spell.target === 'self' || spell.target === 'all') {\n      const log = this.castSpell(this.monsters[0], spell);\n      this.combatLogService.addLine(log);\n      this.gameState = 'fighting';\n      this.postActionPhase();\n      return;\n    }\n    this.selectedSpell = spell;\n    this.selectedActon = 'spell';\n    this.gameState = 'fighting';\n  }\n\n  returnHome() {\n    this.router.navigateByUrl('');\n  }\n}\n\ntype GameState =\n  | 'fighting'\n  | 'lost'\n  | 'win'\n  | 'loading'\n  | 'error'\n  | 'selectingSpell';\n","<div class=\"flex flex-col justify-items-center text-center\">\n  <div\n    class=\"flex flex-col justify-items-center text-center px-5\"\n    *ngIf=\"gameState === 'fighting'\"\n  >\n    <p>A group of monsters approach!</p>\n\n    <p>Lv: {{ player.level }}</p>\n    <p>{{ player.hp }} / {{ player.maxHp }} Player health</p>\n    <p>{{ player.mp }} / {{ player.maxMp }} Player mp</p>\n\n    <div *ngFor=\"let monster of monsters; let i = index\">\n      <div *ngIf=\"!(monster.hp <= 0)\">\n        <p>Monster {{ i + 1 }} ({{ monster.name }}) health: {{ monster.hp }}</p>\n        <app-spell-button (click)=\"attackAction(i)\" bgColor=\"bg-blue-500\">\n          Attack Monster with\n          {{\n            selectedActon === \"attack\" ? \"normal attack\" : selectedSpell?.name\n          }}\n        </app-spell-button>\n      </div>\n    </div>\n\n    <div class=\"grid grid-cols-2 grid-rows-2 grid-flow-col\">\n      <app-spell-button bgColor=\"bg-blue-500\" (click)=\"attackBtn()\">\n        Attack\n      </app-spell-button>\n      <app-spell-button bgColor=\"bg-blue-500\" (click)=\"spellBtn()\">\n        Spell\n      </app-spell-button>\n      <app-spell-button bgColor=\"bg-blue-500\"> ??? </app-spell-button>\n      <app-spell-button bgColor=\"bg-blue-500\" (click)=\"confirmRun()\">\n        Run\n      </app-spell-button>\n    </div>\n  </div>\n\n  <div>\n    <p *ngIf=\"gameState === 'lost'\">\n      You Died!\n      <app-spell-button bgColor=\"bg-blue-500\" (click)=\"returnHome()\"\n        >Return Home</app-spell-button\n      >\n    </p>\n  </div>\n  <div>\n    <p *ngIf=\"gameState === 'win'\">\n      You Win!\n      <app-spell-button bgColor=\"bg-blue-500\" (click)=\"returnHome()\"\n        >Return Home</app-spell-button\n      >\n    </p>\n  </div>\n  <div>\n    <p *ngIf=\"gameState === 'error'\">\n      An Error Occured\n      <app-spell-button bgColor=\"bg-blue-500\" (click)=\"returnHome()\"\n        >Return Home</app-spell-button\n      >\n    </p>\n  </div>\n\n  <div><p *ngIf=\"gameState === 'loading'\">Loading</p></div>\n  <div>\n    <div *ngIf=\"gameState === 'selectingSpell'\" class=\"my-2\">\n      <div *ngFor=\"let spell of unlocksService.getUnlockedSpells()\">\n        <app-spell-button bgColor=\"bg-blue-500\" (click)=\"selectSpell(spell)\">\n          {{ spell.name }}\n        </app-spell-button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"border-gray-500 border-solid border-2 border-spacing-6\">\n    Combat Log\n    <div *ngFor=\"let log of combatLogService.combatLog\">{{ log }}</div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  DemonLord,\n  Dragon,\n  FireWitch,\n  Golem,\n  IceWitch,\n  Imp,\n  King,\n  Monster,\n  Queen,\n  Scorpion,\n  Skeleton,\n  Slime,\n} from './monsters';\nimport { PlayerService } from './player.service';\nimport { UnlocksService } from '../unlocks.service';\nimport { getRandomNumberArbitrary } from '../utils/get-random-number-arbitrary';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EncounterTableService {\n  constructor(\n    private playerService: PlayerService,\n    private unlocksService: UnlocksService\n  ) {}\n\n  getEncounter(encounterNumber: number) {\n    const possibleEncounters: Monster[][] =\n      this.getPossibleEncounters(encounterNumber);\n\n    const encounterTodo = Math.round(\n      getRandomNumberArbitrary(0, possibleEncounters.length - 1)\n    );\n\n    return possibleEncounters[encounterTodo];\n  }\n\n  private getPossibleEncounters(encounterNumber: number): Monster[][] {\n    switch (encounterNumber) {\n      case 1:\n        return [[this.imp(), this.imp(), this.imp()]];\n      case 2:\n        return [\n          [this.imp(), this.imp(), this.imp()],\n          [this.slime(), this.slime()],\n        ];\n      case 3:\n        return [\n          [this.imp(), this.imp(), this.imp()],\n          [this.slime(), this.slime(), this.slime()],\n          [this.skeleton(), this.skeleton()],\n        ];\n      case 4:\n        return [\n          [this.imp(), this.imp(), this.imp()],\n          [this.slime(), this.slime(), this.slime()],\n          [this.skeleton(), this.skeleton(), this.skeleton()],\n        ];\n      case 5:\n        return [\n          [this.imp(), this.imp(), this.imp()],\n          [this.slime(), this.slime(), this.slime()],\n          [this.skeleton(), this.skeleton(), this.skeleton()],\n          [this.scorpion()],\n        ];\n      case 6:\n        return [\n          [this.slime(), this.slime(), this.slime()],\n          [this.skeleton(), this.skeleton(), this.skeleton()],\n          [this.scorpion()],\n        ];\n      case 7:\n        return [\n          [this.slime(), this.slime(), this.slime()],\n          [this.skeleton(), this.skeleton(), this.skeleton()],\n          [this.scorpion(), this.scorpion()],\n        ];\n      case 8:\n        return [\n          [this.slime(), this.slime(), this.slime()],\n          [this.skeleton(), this.skeleton(), this.skeleton()],\n          [this.scorpion(), this.scorpion()],\n          [this.dragon()],\n        ];\n      case 9:\n        return [\n          [this.skeleton(), this.skeleton(), this.skeleton()],\n          [this.scorpion(), this.scorpion(), this.scorpion()],\n          [this.dragon()],\n        ];\n\n      case 89:\n        return [[new Golem(this.playerService, this.unlocksService)]];\n      case 404:\n        return [[new King(this.playerService, this.unlocksService)]];\n      case 99:\n        return [\n          [\n            new FireWitch(this.playerService, this.unlocksService),\n            new IceWitch(this.playerService, this.unlocksService),\n          ],\n        ];\n      case 100:\n        return [[new Queen(this.playerService, this.unlocksService)]];\n      case 999:\n        return [[new DemonLord(this.playerService, this.unlocksService)]];\n      default:\n        throw new Error('No Encounter Found for that number');\n    }\n  }\n\n  imp() {\n    return new Imp(this.playerService, this.unlocksService);\n  }\n\n  slime() {\n    return new Slime(this.playerService, this.unlocksService);\n  }\n\n  skeleton() {\n    return new Skeleton(this.playerService, this.unlocksService);\n  }\n\n  scorpion() {\n    return new Scorpion(this.playerService, this.unlocksService);\n  }\n\n  dragon() {\n    return new Dragon(this.playerService, this.unlocksService);\n  }\n}\n","import { Unlockables } from '../spells';\nimport { UnlocksService } from '../unlocks.service';\nimport { PlayerService } from './player.service';\n\ntype MonsterStatuses = 'minimized' | 'blinded';\n\nexport abstract class Monster {\n  constructor(\n    protected playerService: PlayerService,\n    protected unlocksService: UnlocksService\n  ) {}\n  abstract name: string;\n  abstract hp: number;\n\n  abstract takeAction: () => string;\n  abstract reward: () => void;\n\n  statuses: MonsterStatuses[] = [];\n\n  isDefeated = () => {\n    return this.hp <= 0;\n  };\n\n  takeDamage = (ammounOfDamage: number) => {\n    if (this.statuses.includes('minimized')) {\n      ammounOfDamage = Math.floor(ammounOfDamage * 1.4);\n    }\n    this.hp -= ammounOfDamage;\n    return ammounOfDamage;\n  };\n\n  giveStatus(status: MonsterStatuses) {\n    this.statuses.push(status);\n  }\n}\n\nexport class Imp extends Monster {\n  name = 'Imp';\n  hp = 8;\n\n  takeAction = () => {\n    const damageTaken = this.playerService.takeDamage(5, this);\n    return `${this.name} attacks you for ${damageTaken} damage`;\n  };\n  reward = () => {};\n}\n\nexport class Slime extends Monster {\n  name = 'Slime';\n  hp = 7;\n  takeAction = () => {\n    const damageTaken = this.playerService.takeDamage(9, this);\n    return `${this.name} attacks you for ${damageTaken} damage`;\n  };\n  reward = () => {};\n}\n\nexport class Skeleton extends Monster {\n  name = 'Skeleton';\n  hp = 14;\n  takeAction = () => {\n    const damageTaken = this.playerService.takeDamage(15, this);\n    return `${this.name} attacks you for ${damageTaken} damage`;\n  };\n  reward = () => {};\n}\n\nexport class Scorpion extends Monster {\n  name = 'Scorpion';\n  hp = 18;\n  takeAction = () => {\n    const damageTaken = this.playerService.takeDamage(20, this);\n    return `${this.name} attacks you for ${damageTaken} damage`;\n  };\n  reward = () => {};\n}\n\nexport class Dragon extends Monster {\n  name = 'Dragon';\n  hp = 30;\n  takeAction = () => {\n    const damageTaken = this.playerService.takeDamage(28, this);\n    return `${this.name} attacks you for ${damageTaken} damage`;\n  };\n  reward = () => {};\n}\n\nexport class Golem extends Monster {\n  name = 'Golem';\n  hp = 70;\n  takeAction = () => {\n    const damageTaken = this.playerService.takeDamage(35, this);\n    return `${this.name} attacks you for ${damageTaken} damage`;\n  };\n  reward = () => {\n    this.unlocksService.unlock(Unlockables.StoneDefence.name);\n  };\n}\n\nexport class FireWitch extends Monster {\n  name = 'Fire Witch';\n  hp = 30;\n\n  takeAction = () => {\n    const damageTaken = this.playerService.takeDamage(18, this);\n    return `${this.name} throws a fireball at you for ${damageTaken} damage`;\n  };\n  reward = () => {\n    this.unlocksService.unlock(Unlockables.Fireball.name);\n    this.unlocksService.unlock(Unlockables.Icebeam.name);\n  };\n}\n\nexport class IceWitch extends Monster {\n  name = 'Ice Witch';\n  hp = 30;\n\n  takeAction = () => {\n    const damageTaken = this.playerService.takeDamage(18, this);\n    return `${this.name} shoots an icebeam at you for ${damageTaken} damage`;\n  };\n  reward = () => {};\n}\n\nexport class King extends Monster {\n  name = 'King';\n  hp = 40;\n  charged = false;\n\n  takeAction = () => {\n    if (this.charged) {\n      const damageTaken = this.playerService.takeDamage(43, this);\n      this.charged = false;\n      return `${this.name} swings at you for ${damageTaken} damage`;\n    }\n    this.charged = true;\n    return `${this.name} charges up a massive attack`;\n  };\n  reward = () => {\n    this.unlocksService.unlock(Unlockables.BlindingLight.name);\n  };\n}\n\nexport class Queen extends Monster {\n  name = 'Queen';\n  hp = 40;\n\n  takeAction = () => {\n    const damageTaken = this.playerService.takeDamage(26, this);\n    return `${this.name} shoots an icebeam at you for ${damageTaken} damage`;\n  };\n  reward = () => {\n    this.unlocksService.unlock(Unlockables.BlindingLight.name);\n  };\n}\n\nexport class DemonLord extends Monster {\n  name = 'Demon Lord';\n  hp = 1000;\n\n  takeAction = () => {\n    const damageTaken = this.playerService.takeDamage(32, this);\n    return `${this.name} shoots an icebeam at you for ${damageTaken} damage`;\n  };\n  reward = () => {\n    alert('you defeated the demon lord congratz');\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Monster } from './monsters';\nimport { CombatLogService } from './combat-log.service';\nimport { getRandomNumberArbitrary } from '../utils/get-random-number-arbitrary';\n\ntype PlayerStatuses = 'stoneDefence' | 'charged';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlayerService {\n  constructor(private combatLogService: CombatLogService) {}\n  level = +(localStorage.getItem('playerLevel') || '1');\n  damage = this.level * 3 + 2;\n  maxHp = this.level * 3 + 37;\n  maxMp = this.level * 3 + 12;\n  hp = this.maxHp;\n  mp = this.maxMp;\n  statuses: PlayerStatuses[] = [];\n\n  reset() {\n    this.hp = this.maxHp;\n    this.mp = this.maxMp;\n    this.statuses = [];\n  }\n\n  levelUp() {\n    this.level++;\n    localStorage.setItem('playerLevel', this.level.toString());\n\n    this.maxHp += 3;\n    this.damage += 3;\n  }\n\n  takeDamage(ammountOfDamage: number, attackingMonster: Monster) {\n    if (this.statuses.includes('stoneDefence')) {\n      ammountOfDamage = Math.floor(ammountOfDamage * 0.8);\n    }\n    if (\n      attackingMonster.statuses.includes('blinded') &&\n      getRandomNumberArbitrary(0, 100) < 30\n    ) {\n      this.combatLogService.addLine(\n        `${attackingMonster.name} misses because its blinded`\n      );\n      return;\n    }\n    this.hp -= ammountOfDamage;\n    return ammountOfDamage;\n  }\n\n  giveStatus(status: PlayerStatuses) {\n    this.statuses.push(status);\n  }\n\n  removeStatus(status: PlayerStatuses) {\n    const index = this.statuses.indexOf(status);\n    if (index > -1) {\n      this.statuses.splice(index, 1);\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { UnlocksService } from '../unlocks.service';\nimport { Unlockables } from '../spells';\n\n@Component({\n  selector: 'app-gale-page',\n  templateUrl: './gale-page.component.html',\n  styleUrls: ['./gale-page.component.scss'],\n})\nexport class GalePageComponent {\n  constructor(public unlocksService: UnlocksService) {}\n\n  isGaleUnlocked() {\n    return this.unlocksService.isUnlocked(Unlockables.Gale);\n  }\n}\n","<div class=\"flex flex-col text-center align-middle justify-center mx-2\">\n  <h1 class=\"text-3xl\">Gale</h1>\n  <p>\n    Many spells are good for fighting one target. But you need something that\n    can hit many creatures at once. Try looking for a wind sprite that can teach\n    you Gale! Wind sprites tend to like things that move around a lot.\n  </p>\n\n  <img\n    *ngIf=\"!isGaleUnlocked()\"\n    src=\"assets/questionBlock.png\"\n    alt=\"Question Mark\"\n    class=\"my-4\"\n  />\n\n  <app-spell-button bgColor=\"bg-gray-900\" routerLink=\"\"\n    >Back to Spellbook</app-spell-button\n  >\n</div>\n","import { Component } from '@angular/core';\nimport { UnlocksService } from '../unlocks.service';\nimport { Unlockables } from '../spells';\n\n@Component({\n  selector: 'app-heal-page',\n  templateUrl: './heal-page.component.html',\n  styleUrls: ['./heal-page.component.scss'],\n})\nexport class HealComponent {\n  constructor(public unlocksService: UnlocksService) {}\n\n  isMushroomUnlocked() {\n    return this.unlocksService.isUnlocked(Unlockables.Mushroom);\n  }\n\n  isGingerRootUnlocked() {\n    return this.unlocksService.isUnlocked(Unlockables.GingerRoot);\n  }\n\n  isChamomileUnlocked() {\n    return this.unlocksService.isUnlocked(Unlockables.Chamomile);\n  }\n\n  isLavenderUnlocked() {\n    return this.unlocksService.isUnlocked(Unlockables.Lavender);\n  }\n\n  shouldChangeLayout() {\n    return (\n      this.isChamomileUnlocked() &&\n      this.isGingerRootUnlocked() &&\n      this.isLavenderUnlocked() &&\n      this.isMushroomUnlocked()\n    );\n  }\n}\n","<div class=\"flex flex-col text-center align-middle mx-1\">\n  <h1 class=\"text-3xl\">Heal</h1>\n  <div *ngIf=\"!shouldChangeLayout()\">\n    <p>\n      Feeling tired after your battle, you stop by the healer's building to\n      restore your health. A friendly woman working over a large cauldron greets\n      you.\n    </p>\n\n    <!-- woman image -->\n\n    <p>\n      \"Hello, warrior! I hear you're going to fight the Demonlord for us. I can\n      heal you here, but I think it'd be better if you learned a spell to heal\n      yourself in battle.\n    </p>\n\n    <p>\n      However, I've been busy making potions to send to the armies on the\n      frontlines too and haven't had a chance to restock my supply. Could you\n      find me these ingredients, please? I can teach you the spell after.\n    </p>\n\n    <p>Here are the ingredients I need.\"</p>\n\n    <div class=\"flex flex-row w-full flex-wrap justify-center\">\n      <img\n        *ngIf=\"!isMushroomUnlocked()\"\n        src=\"assets/redMushroomCropBW.jpg\"\n        alt=\"Red Mushroom\"\n        style=\"height: 200px\"\n      />\n\n      <img\n        *ngIf=\"isMushroomUnlocked()\"\n        src=\"assets/redMushroomCrop.jpg\"\n        alt=\"Red Mushroom\"\n        style=\"height: 200px\"\n      />\n\n      <img\n        *ngIf=\"!isGingerRootUnlocked()\"\n        src=\"assets/gingerRootBW.PNG\"\n        alt=\"Ginger Root\"\n        style=\"height: 200px\"\n      />\n\n      <img\n        *ngIf=\"isGingerRootUnlocked()\"\n        src=\"assets/gingerRoot.PNG\"\n        alt=\"Ginger Root\"\n        style=\"height: 200px\"\n      />\n\n      <img\n        *ngIf=\"!isChamomileUnlocked()\"\n        src=\"assets/chamomileCropBW.jpg\"\n        alt=\"Chamomile\"\n        style=\"height: 200px\"\n      />\n\n      <img\n        *ngIf=\"isChamomileUnlocked()\"\n        src=\"assets/chamomileCrop.jpg\"\n        alt=\"Chamomile\"\n        style=\"height: 200px\"\n      />\n\n      <img\n        *ngIf=\"!isLavenderUnlocked()\"\n        src=\"assets/lavenderCropBW.jpg\"\n        alt=\"Lavender\"\n        style=\"height: 200px\"\n      />\n\n      <img\n        *ngIf=\"isLavenderUnlocked()\"\n        src=\"assets/lavenderCrop.jpg\"\n        alt=\"Lavender\"\n        style=\"height: 200px\"\n      />\n    </div>\n  </div>\n\n  <div *ngIf=\"shouldChangeLayout()\">\n    <p>The woman is delighted to see you return with the ingredients.</p>\n    <p>\n      \"Thank you, this will go a long way to helping our soldiers on the\n      frontlines.\"\n    </p>\n    <p>\n      \"Here is the incantation for the spell. May it prove handy should you need\n      it.\"\n    </p>\n    <p>\n      <app-spell-button\n        class=\"my-2\"\n        bgColor=\"bg-gray-900\"\n        routerLink=\"/unlock-page\"\n        [queryParams]=\"{ thingtounlock: 'Heal' }\"\n      >\n        Unlock the heal spell\n      </app-spell-button>\n    </p>\n  </div>\n  <div class=\"my-2\">\n    <app-spell-button bgColor=\"bg-gray-900\" routerLink=\"\"\n      >Back to Spellbook</app-spell-button\n    >\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { UnlocksService } from '../unlocks.service';\nimport { Router } from '@angular/router';\nimport { Unlockables } from '../spells';\nimport { PlayerService } from '../combat-page/player.service';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss'],\n})\nexport class HomePageComponent {\n  constructor(\n    public unlocksService: UnlocksService,\n    private router: Router,\n    private playerService: PlayerService\n  ) {}\n\n  magicMissileConfirm() {\n    alert('Magic Missile does random damage to one target');\n  }\n  healButtonClicked() {\n    if (this.unlocksService.isUnlocked(Unlockables.Heal)) {\n      alert('Heal restores a portion of your health.');\n    } else {\n      this.router.navigateByUrl('heal-page');\n    }\n  }\n  galeButtonClicked() {\n    if (this.unlocksService.isUnlocked(Unlockables.Gale)) {\n      alert('Gale is a spell that damages multiple targets.');\n    } else {\n      this.router.navigateByUrl('gale-page');\n    }\n  }\n  minimizeButtonClicked() {\n    if (this.unlocksService.isUnlocked(Unlockables.Minimize)) {\n      alert(\n        'Minimize makes your target smaller causing them to take more damage.'\n      );\n    } else {\n      this.router.navigateByUrl('minimize-page');\n    }\n  }\n\n  stoneDefenseConfirm() {\n    if (this.unlocksService.isUnlocked(Unlockables.StoneDefence)) {\n      return alert('Stone Defence makes you take less damage');\n    }\n    const confirmed = confirm(\n      'You need to defeat a powerful foe for this spell. Are you ready?'\n    );\n    if (confirmed) {\n      this.router.navigateByUrl('combat-page?encounter=89');\n    }\n  }\n\n  chargeAttackConfirm() {\n    if (this.unlocksService.isUnlocked(Unlockables.ChargeAttack)) {\n      return alert(\n        'Charge Attack takes an extra turn, but deals massive damage'\n      );\n    }\n    const confirmed = confirm(\n      'You need to defeat a powerful foe for this spell. Are you ready?'\n    );\n    if (confirmed) {\n      this.router.navigateByUrl('combat-page?encounter=404');\n    }\n  }\n\n  fireballConfirm() {\n    if (this.unlocksService.isUnlocked(Unlockables.Fireball)) {\n      return alert(\n        'Fireball does damage to one foe. Icebeam does damage to all foes.'\n      );\n    }\n    const confirmed = confirm(\n      'You need to defeat a powerful foe for this spell. Are you ready?'\n    );\n    if (confirmed) {\n      this.router.navigateByUrl('combat-page?encounter=99');\n    }\n  }\n\n  blindingLightConfirm() {\n    if (this.unlocksService.isUnlocked(Unlockables.BlindingLight)) {\n      return alert(\n        'Blinding Light blinds all enemies causing them to sometimes miss.'\n      );\n    }\n    const confirmed = confirm(\n      'You need to defeat a powerful foe for this spell. Are you ready?'\n    );\n    if (confirmed) {\n      this.router.navigateByUrl('combat-page?encounter=100');\n    }\n  }\n\n  demonlordConfirm() {\n    const spellsUnlocked = this.unlocksService.getUnlockedSpells().length;\n    if (spellsUnlocked <= 6) {\n      return alert(\n        'You can only fight the Demonlord when you have 6 spells unlocked!'\n      );\n    }\n    const confirmed = confirm('Are you ready to fight the demonlord?');\n    if (confirmed) {\n      this.router.navigateByUrl('combat-page?encounter=999');\n    }\n  }\n  combatButtonClicked() {\n    const unlockedSpellsCount = this.unlocksService.getUnlockedSpells().length;\n    const playerLevel = this.playerService.level;\n    if (playerLevel > unlockedSpellsCount * 2) {\n      alert(\n        `Your level (${playerLevel}) is 2x your number of spells (${unlockedSpellsCount}), Learn more spells to level up`\n      );\n      return;\n    }\n    this.router.navigateByUrl(\n      `combat-page?encounter=${this.unlocksService.getUnlockedSpells().length}`\n    );\n  }\n}\n","<div class=\"flex flex-col\">\n  <h1 class=\"text-3xl font-bold underline flex flex-col text-center pb-2\">\n    Spellbook\n  </h1>\n\n  <app-spell-button (click)=\"magicMissileConfirm()\" bgColor=\"bg-purple-700\"\n    >Magic Missile</app-spell-button\n  >\n\n  <app-spell-button bgColor=\"bg-green-700\" (click)=\"healButtonClicked()\"\n    >Heal</app-spell-button\n  >\n\n  <app-spell-button bgColor=\"bg-green-400\" (click)=\"galeButtonClicked()\"\n    >Gale</app-spell-button\n  >\n\n  <app-spell-button bgColor=\"bg-orange-700\" (click)=\"minimizeButtonClicked()\"\n    >Minimize</app-spell-button\n  >\n\n  <app-spell-button bgColor=\"bg-amber-900\" (click)=\"stoneDefenseConfirm()\">\n    Stone Defense\n  </app-spell-button>\n\n  <app-spell-button (click)=\"chargeAttackConfirm()\" bgColor=\"bg-indigo-800\">\n    Charge Attack\n  </app-spell-button>\n\n  <app-spell-button\n    class=\"btn btn-danger\"\n    (click)=\"fireballConfirm()\"\n    bgColor=\"bg-red-600\"\n    >Fireball</app-spell-button\n  >\n\n  <app-spell-button\n    class=\"btn btn-info\"\n    (click)=\"fireballConfirm()\"\n    bgColor=\"bg-sky-500\"\n    >Icebeam</app-spell-button\n  >\n\n  <app-spell-button (click)=\"blindingLightConfirm()\" bgColor=\"bg-yellow-400\">\n    Blinding Light\n  </app-spell-button>\n</div>\n\n<app-spell-button bgColor=\"bg-gray-900\" (click)=\"combatButtonClicked()\">\n  Fight monsters\n</app-spell-button>\n\n<app-spell-button bgColor=\"bg-gray-900\" (click)=\"demonlordConfirm()\">\n  Fight Demonlord\n</app-spell-button>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-learn-fireball',\n  templateUrl: './learn-fireball.component.html',\n  styleUrls: ['./learn-fireball.component.scss']\n})\nexport class LearnFireballComponent {\n  // add fireball to your known spells\n  // return to homepage\n}\n","<p>learn-fireball works!</p>\n","import { Component } from '@angular/core';\nimport { UnlocksService } from '../unlocks.service';\nimport { Unlockables } from '../spells';\n\n@Component({\n  selector: 'app-minimize-page',\n  templateUrl: './minimize-page.component.html',\n  styleUrls: ['./minimize-page.component.scss'],\n})\nexport class MinimizePageComponent {\n  constructor(public unlocksService: UnlocksService) {}\n  isBlueStoneUnlocked() {\n    return this.unlocksService.isUnlocked(Unlockables.BlueStone);\n  }\n\n  isEatingPlantUnlocked() {\n    return this.unlocksService.isUnlocked(Unlockables.EatingPlant);\n  }\n\n  isRainbowFishUnlocked() {\n    return this.unlocksService.isUnlocked(Unlockables.RainbowFish);\n  }\n\n  shouldChangeLayout() {\n    return (\n      this.isBlueStoneUnlocked() &&\n      this.isEatingPlantUnlocked() &&\n      this.isRainbowFishUnlocked()\n    );\n  }\n}\n","<div class=\"flex flex-col text-center align-middle justify-center mx-2\">\n  <h1 class=\"text-3xl\">Minimize</h1>\n  <p>\n    Some of your enemies are pretty tough. The pixies know a spell or two to\n    help you out.\n  </p>\n\n  <p>\n    You arrive at Pixie Grotto, and a small group approaches you. After\n    explaining your request, they're hapy to help. If you can do something for\n    them.\n  </p>\n\n  <p>\n    \"Solve our three riddles, and we'll teach you the spell Minimize! It can\n    make your opponents much smaller which means it'll hurt more when you hit\n    them. Be careful, if they're small they might be harder to hit too, and the\n    spell won't last forever!\n  </p>\n\n  <p>\"Bring us these items, and we'll help you on your way.\"</p>\n\n  <p>The ocean in solid form.</p>\n  <p>A plant that preys on others.</p>\n  <p>The fish that gives it scales away.</p>\n\n  <div class=\"flex flex-row w-full flex-wrap justify-center\">\n    <img\n      *ngIf=\"!isBlueStoneUnlocked()\"\n      src=\"assets/questionBlock.png\"\n      alt=\"Question Mark\"\n      style=\"width: 150px; height: 150px\"\n    />\n    <img\n      *ngIf=\"!isEatingPlantUnlocked()\"\n      src=\"assets/questionBlock.png\"\n      alt=\"Question Mark\"\n      style=\"width: 150px; height: 150px\"\n    />\n    <img\n      *ngIf=\"!isRainbowFishUnlocked()\"\n      src=\"assets/questionBlock.png\"\n      alt=\"Question Mark\"\n      style=\"width: 150px; height: 150px\"\n    />\n  </div>\n\n  <div *ngIf=\"shouldChangeLayout()\">\n    <p>Wowie you did it</p>\n    <p>\n      <app-spell-button\n        bgColor=\"bg-gray-900\"\n        routerLink=\"/unlock-page\"\n        [queryParams]=\"{ thingtounlock: 'Minimize' }\"\n      >\n        Unlock the heal spell\n      </app-spell-button>\n    </p>\n  </div>\n\n  <app-spell-button class=\"my-2\" bgColor=\"bg-gray-900\" routerLink=\"\"\n    >Back to Spellbook</app-spell-button\n  >\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-spell-button',\n  templateUrl: './spell-button.component.html',\n  styleUrls: ['./spell-button.component.scss'],\n})\nexport class SpellButtonComponent {\n  @Input()\n  bgColor?: string;\n}\n","<div class=\"flex flex-row justify-center\">\n  <button\n    type=\"button\"\n    class=\"{{ bgColor }} text-white font-bold py-2 px-10 rounded w-11/12 mb-5\"\n  >\n    <ng-content></ng-content>\n  </button>\n</div>\n","import { Pages } from './app-routing.module';\nimport { CombatLogService } from './combat-page/combat-log.service';\nimport { Monster } from './combat-page/monsters';\nimport { PlayerService } from './combat-page/player.service';\nimport { UnlocksService } from './unlocks.service';\nimport { getRandomNumberArbitrary } from './utils/get-random-number-arbitrary';\n\nexport namespace Unlockables {\n  export abstract class Unlockable {\n    constructor(\n      protected unlocksService: UnlocksService,\n      protected playerService: PlayerService,\n      protected combatLogService: CombatLogService\n    ) {}\n    name = this.constructor.name;\n    abstract placeToGoAfterUnlock: Pages;\n  }\n\n  export class Mushroom extends Unlockable {\n    placeToGoAfterUnlock = Pages.Heal;\n  }\n  export class GingerRoot extends Unlockable {\n    placeToGoAfterUnlock = Pages.Heal;\n  }\n  export class Lavender extends Unlockable {\n    placeToGoAfterUnlock = Pages.Heal;\n  }\n  export class Chamomile extends Unlockable {\n    placeToGoAfterUnlock = Pages.Heal;\n  }\n  export class BlueStone extends Unlockable {\n    placeToGoAfterUnlock = Pages.Minimize;\n  }\n  export class EatingPlant extends Unlockable {\n    placeToGoAfterUnlock = Pages.Minimize;\n  }\n  export class RainbowFish extends Unlockable {\n    placeToGoAfterUnlock = Pages.Minimize;\n  }\n\n  export abstract class Spell extends Unlockable {\n    abstract action: (monster: Monster, monsters: Monster[]) => string;\n    abstract target: TargetingType;\n    abstract mpCost: number;\n  }\n\n  export type TargetingType = 'single' | 'all' | 'self';\n\n  export class MagicMissle extends Spell {\n    placeToGoAfterUnlock = Pages.Home;\n    target: TargetingType = 'single';\n    mpCost = 8;\n    action = (monster: Monster) => {\n      const dmg = Math.floor(\n        this.playerService.damage * (getRandomNumberArbitrary(10, 20) / 100 + 1)\n      );\n      const dmgDealt = monster.takeDamage(dmg);\n      return `MagicMissle does ${dmgDealt} non-elemental damage to ${monster.name}`;\n    };\n  }\n\n  export class Gale extends Spell {\n    placeToGoAfterUnlock = Pages.Home;\n    target: TargetingType = 'all';\n    mpCost = 8;\n    action = (_: Monster, monsters: Monster[]) => {\n      monsters.forEach((monster) => monster.takeDamage(10));\n\n      return `Gale does 10 wind damage to all enemies`;\n    };\n  }\n\n  export class Minimize extends Spell {\n    placeToGoAfterUnlock = Pages.Home;\n    target: TargetingType = 'single';\n    mpCost = 8;\n    action = (monster: Monster) => {\n      monster.giveStatus('minimized');\n      return `${monster.name} has been minimized and will take extra damage`;\n    };\n  }\n\n  export class StoneDefence extends Spell {\n    placeToGoAfterUnlock = Pages.Home;\n    target: TargetingType = 'self';\n    mpCost = 8;\n    action = () => {\n      this.playerService.giveStatus('stoneDefence');\n      return `You gain stone armor you will take less damage`;\n    };\n  }\n\n  export class ChargeAttack extends Spell {\n    placeToGoAfterUnlock = Pages.Home;\n    target: TargetingType = 'single';\n    mpCost = 0;\n    action = (monster: Monster) => {\n      if (this.playerService.statuses.includes('charged')) {\n        this.playerService.removeStatus('charged');\n        const dmgDealt = monster.takeDamage(50);\n        return `You deal ${dmgDealt} damage to ${monster.name} with a charged attack`;\n      }\n      this.playerService.giveStatus('charged');\n      return `You charge up a huge attack`;\n    };\n  }\n\n  export class Heal extends Spell {\n    placeToGoAfterUnlock = Pages.Home;\n    target: TargetingType = 'self';\n    mpCost = 8;\n    action = () => {\n      const ammountToHeal = Math.floor(this.playerService.maxHp * 0.4);\n      this.playerService.hp += ammountToHeal;\n      if (this.playerService.hp > this.playerService.maxHp) {\n        this.playerService.hp = this.playerService.maxHp;\n      }\n      return `You cast Heal and gain ${ammountToHeal} hp`;\n    };\n  }\n\n  export class Fireball extends Spell {\n    target: TargetingType = 'single';\n    placeToGoAfterUnlock = Pages.Home;\n    mpCost = 8;\n    action = (monster: Monster) => {\n      const dmgDealt = monster.takeDamage(30);\n      return `Fireball does ${dmgDealt} fire damnge to ${monster.name}`;\n    };\n  }\n\n  export class Icebeam extends Spell {\n    target: TargetingType = 'all';\n    placeToGoAfterUnlock = Pages.Home;\n    mpCost = 8;\n    action = (_: Monster, monsters: Monster[]) => {\n      this.playerService.mp -= 8;\n      monsters.forEach((monster) => monster.takeDamage(20));\n\n      return `Icebeam does 20 ice damage to all enemies`;\n    };\n  }\n\n  export class BlindingLight extends Spell {\n    target: TargetingType = 'all';\n    placeToGoAfterUnlock = Pages.Home;\n    mpCost = 8;\n    action = (_: Monster, monsters: Monster[]) => {\n      monsters.forEach((monster) => {\n        if (monster.name === 'Demon Lord') {\n          monster.hp = 100;\n          this.combatLogService.addLine(\n            'The Demon Lord is weakend by the light'\n          );\n        }\n      });\n      monsters.forEach((monster) => monster.giveStatus('blinded'));\n\n      return `All the enemies become blinded`;\n    };\n  }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UnlocksService } from '../unlocks.service';\n\n@Component({\n  selector: 'app-unlock-page',\n  templateUrl: './unlock-page.component.html',\n  styleUrls: ['./unlock-page.component.scss'],\n})\nexport class UnlockPageComponent {\n  constructor(\n    route: ActivatedRoute,\n    router: Router,\n    unlocksService: UnlocksService\n  ) {\n    const value: string = route.snapshot.queryParams['thingtounlock'];\n    if (value) {\n      const unlock = unlocksService.unlock(value);\n      return router.navigateByUrl(unlock.placeToGoAfterUnlock);\n    }\n    router.navigateByUrl('/');\n  }\n}\n","<p>unlock-page works!</p>\n","import { Injectable } from '@angular/core';\nimport { Unlockables } from './spells';\nimport { PlayerService } from './combat-page/player.service';\nimport { CombatLogService } from './combat-page/combat-log.service';\n\nconst LOCAL_STORAGE_KEY = 'cookie';\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnlocksService {\n  constructor(\n    private playerService: PlayerService,\n    private combatLogService: CombatLogService\n  ) {}\n  private unlockedStuff: Record<string, boolean> = JSON.parse(\n    localStorage.getItem(LOCAL_STORAGE_KEY) || '{ \"MagicMissle\" : true}'\n  );\n\n  private unlockedClasses = Object.fromEntries(\n    Object.entries(this.unlockedStuff).map(([className]) => [\n      className,\n      this.spellNameToSpellClass(className),\n    ])\n  );\n\n  unlock(key: string) {\n    this.unlockedStuff[key] = true;\n    this.unlockedClasses[key] = this.spellNameToSpellClass(key);\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(this.unlockedStuff));\n    return this.unlockedClasses[key];\n  }\n\n  isUnlocked<T extends Unlockables.Unlockable>(\n    unlock: new (...args: any[]) => T\n  ) {\n    return this.unlockedStuff[unlock.name];\n  }\n\n  isMultipleUnlocked(\n    unlocks: (new (...args: any[]) => Unlockables.Unlockable)[]\n  ) {\n    return unlocks.map((unlock) => this.isUnlocked(unlock)).every(Boolean);\n  }\n\n  getUnlockedSpells(): Unlockables.Spell[] {\n    return Object.values(this.unlockedClasses).filter((unlockable) =>\n      isSpell(unlockable)\n    ) as Unlockables.Spell[];\n  }\n\n  private spellNameToSpellClass(spellName: string): Unlockables.Unlockable {\n    return new (<any>Unlockables)[spellName](\n      this,\n      this.playerService,\n      this.combatLogService\n    );\n  }\n}\n\nfunction isSpell(\n  unlockable: Unlockables.Unlockable\n): unlockable is Unlockables.Spell {\n  return (unlockable as Unlockables.Spell).action !== undefined;\n}\n","export function getRandomNumberArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","HomePageComponent","LearnFireballComponent","HealComponent","UnlockPageComponent","GalePageComponent","MinimizePageComponent","CombatPageComponent","Pages","routes","path","Unlock","component","LearnFireball","Heal","Gale","Minimize","Combat","Home","AppRoutingModule","forRoot","imports","exports","AppComponent","constructor","selectors","decls","vars","template","i0","BrowserModule","SpellButtonComponent","AppModule","bootstrap","declarations","CombatLogService","addLine","line","combatLog","unshift","clear","factory","providedIn","router","player","activatedRoute","encounterTableService","unlocksService","combatLogService","getUnlockedSpells","reset","queryParams","subscribe","encounterNumber","undefined","gameState","Error","monsters","getEncounter","attackAction","monsterIndex","monster","selectedActon","dmgDealt","takeDamage","damage","name","selectedSpell","log","castSpell","postActionPhase","forEach","isDefeated","takeAction","hp","allMonstersDefeated","reduce","levelUp","reward","spell","mp","mpCost","action","attackBtn","spellBtn","confirmRun","result","confirm","navigateByUrl","selectSpell","target","returnHome","consts","DemonLord","Dragon","FireWitch","Golem","IceWitch","Imp","King","Queen","Scorpion","Skeleton","Slime","getRandomNumberArbitrary","EncounterTableService","playerService","possibleEncounters","getPossibleEncounters","encounterTodo","Math","round","length","imp","slime","skeleton","scorpion","dragon","Unlockables","Monster","ammounOfDamage","statuses","includes","floor","giveStatus","status","push","damageTaken","unlock","StoneDefence","Fireball","Icebeam","charged","BlindingLight","alert","PlayerService","localStorage","getItem","level","maxHp","maxMp","setItem","toString","ammountOfDamage","attackingMonster","removeStatus","index","indexOf","splice","isGaleUnlocked","isUnlocked","isMushroomUnlocked","Mushroom","isGingerRootUnlocked","GingerRoot","isChamomileUnlocked","Chamomile","isLavenderUnlocked","Lavender","shouldChangeLayout","magicMissileConfirm","healButtonClicked","galeButtonClicked","minimizeButtonClicked","stoneDefenseConfirm","confirmed","chargeAttackConfirm","ChargeAttack","fireballConfirm","blindingLightConfirm","demonlordConfirm","spellsUnlocked","combatButtonClicked","unlockedSpellsCount","playerLevel","ctx","isBlueStoneUnlocked","BlueStone","isEatingPlantUnlocked","EatingPlant","isRainbowFishUnlocked","RainbowFish","inputs","bgColor","ngContentSelectors","Unlockable","Spell","MagicMissle","dmg","_","ammountToHeal","route","value","snapshot","placeToGoAfterUnlock","LOCAL_STORAGE_KEY","UnlocksService","JSON","parse","Object","fromEntries","entries","unlockedStuff","map","className","spellNameToSpellClass","key","unlockedClasses","stringify","isMultipleUnlocked","unlocks","every","Boolean","values","filter","unlockable","isSpell","spellName","min","max","random","__NgCli_bootstrap_1","bootstrapModule","catch","err","console","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}